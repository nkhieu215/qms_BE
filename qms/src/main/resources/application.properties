# * config c?a h? th?ng
#spring.jpa.database=default
#
#spring.datasource.url= jdbc:mysql://localhost:3306/qms_03012024?useSSL=false&useUnicode=yes&characterEncoding=UTF-8
#spring.datasource.username=root
#spring.datasource.password=
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.configuration.maximum-pool-size=5
#
##spring.datasource.url= jdbc:mysql://192.168.68.92:3306/qms2?useSSL=false&useUnicode=yes&characterEncoding=UTF-8
##spring.datasource.username=phudv
##spring.datasource.password=123456aA@@
##spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
##spring.datasource.configuration.maximum-pool-size=5
#
#
##second db ...
#spring.seconddatasource.url = jdbc:mysql://localhost:3306/rangdong_18012024?useSSL=false&useUnicode=yes&characterEncoding=UTF-8
#spring.seconddatasource.username =root
#spring.seconddatasource.password =
#spring.seconddatasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.sgcdatasource.configuration.maximum-pool-size=5
#
##second db ...
#spring.sapdatasource.url = jdbc:sqlserver://192.168.68.3\\MSSQLSERVER:1433;database=Thang4;encrypt=true;trustServerCertificate=true;
#spring.sapdatasource.username =read
#spring.sapdatasource.password =2022@mesrd
#spring.sapdatasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver
#spring.sapdatasource.configuration.maximum-pool-size=5
#spring.sapdatasource.jpa.properties.hibernate.dialect = org.hibernate.dialect.SQLServer2012Dialect
#spring.jpa.properties.hibernate.physical_naming_strategy=com.fn.sap.CustomPhysicalNamingSQL
#
## HikariCP settings
## spring.datasource.hikari.*
#spring.datasource.hikari.connection-timeout = 2000 #maximum number of milliseconds that a client will wait for a connection
#spring.datasource.hikari.minimum-idle= 10 #minimum number of idle connections maintained by HikariCP in a connection pool
#spring.datasource.hikari.maximum-pool-size= 10 #maximum pool size
#spring.datasource.hikari.idle-timeout=1000 #maximum idle time for connection
#spring.datasource.hikari.max-lifetime= 1000 # maximum lifetime in milliseconds of a connection in the pool after it is closed.
#spring.datasource.hikari.auto-commit =true #default auto-commit behavior.
#
#spring.jpa.database-platform=org.hibernate.dialect
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
#spring.jpa.hibernate.ddl-auto=none
#
#spring.jpa.show-sql=false
##spring.jpa.properties.hibernate.format_sql=true
#logging.level.org.hibernate.SQL=debug
##logging.level.org.hibernate.type.descriptor.sql=trace
#spring.jackson.serialization.fail-on-empty-beans=false
## log log request
#logging.level.org.springframework.web.client.RestTemplate=INFO
#server.port=8443
##server.ssl.key-store=classpath:qms.p12
##server.ssl.key-store-password=1234567a@
##server.ssl.key-store-type=pkcs12
##server.ssl.key-alias=qms
##server.ssl.key-password=1234567a@
#
## application-dev.properties
#appName.allowedApi=http://localhost:4200,http://localhost:8443
#
#spring.servlet.multipart.max-file-size=1MB
#spring.servlet.multipart.max-request-size=5MB
#upload.image=C:\\upload-dir
#
## App Properties
#bezkoder.app.jwtSecret= qmsSecretKey
#bezkoder.app.jwtExpirationMs= 86400000
#
##api planning
#planning.url.service=http://192.168.68.91:8080
##planning.url.service=http://10.212.134.107:8080
#profile.url.service=http://192.168.68.91:8080
#scada.url.service=http://192.168.68.95:8080
#scada.url.service.config=http://192.168.68.95:8888
#
#
#
##port on which the application would run
#keycloak.realm = QLSX
#keycloak.auth-server-url = https://sso.xfactory.vn/auth
#keycloak.ssl-required = external
##keycloak resource is the client ID
#keycloak.resource = qms_local
#keycloak.use-resource-role-mappings = true
##The line below will prevent redirect to login page
#keycloak.bearer-only= true
#keycloak.cors= true
#keycloak.public-client= true
#
#sso.url=http://192.168.68.90:8080/auth
#sso.realm=QLSX
#sso.user=qms_planning
#sso.pass=123321
#sso.clientid=planning_backend
#sso.secret=AMmEOEbqtPIskkErXNx94vt8c0bvF7Jd
#
#schedule.sync.scada.sync.error=0 0 */12 ? * *
#schedule.sync.scada.sync.line=0 0 */12 ? * *
#schedule.sync.scada.sync.stepprocess=0 0 */12 ? * *
#schedule.sync.scada.sync.machine=0 0 */12 ? * *
#
## process
#thread.push.warning=1
#
#spring.kafka.bootstrap-servers=222.252.25.37:9092,222.252.25.37:9093
#spring.kafka.consumer.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.auto.offset.reset=earliest
#spring.kafka.producer.key.serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value.serializer=org.apache.kafka.common.serialization.StringSerializer
#
#sap.service.host=http://192.168.68.3:8082


# * config c?a b?n test
spring.jpa.database=default

spring.datasource.url= jdbc:mysql://localhost:3307/qms2?useSSL=false&useUnicode=yes&characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=123456789
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.configuration.maximum-pool-size=5

#spring.datasource.url= jdbc:mysql://192.168.68.92:3306/qms2?useSSL=false&useUnicode=yes&characterEncoding=UTF-8
#spring.datasource.username=phudv
#spring.datasource.password=123456aA@@
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.configuration.maximum-pool-size=5


#second db ...
#spring.seconddatasource.url = jdbc:mysql://localhost:3307/qms2?useSSL=false&useUnicode=yes&characterEncoding=UTF-8
#spring.seconddatasource.username =root
#spring.seconddatasource.password =123456789
#spring.seconddatasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.sgcdatasource.configuration.maximum-pool-size=5
spring.seconddatasource.url = jdbc:mysql://192.168.18.99:3306/qms2?useSSL=false&useUnicode=yes&characterEncoding=UTF-8
spring.seconddatasource.username =root
spring.seconddatasource.password =Rangdong@123
spring.seconddatasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.sgcdatasource.configuration.maximum-pool-size=5
#second db ...
spring.sapdatasource.url = jdbc:sqlserver://192.168.68.3\\MSSQLSERVER:1433;database=Thang4;encrypt=true;trustServerCertificate=true;
spring.sapdatasource.username =read
spring.sapdatasource.password =2022@mesrd
spring.sapdatasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.sapdatasource.configuration.maximum-pool-size=5
spring.sapdatasource.jpa.properties.hibernate.dialect = org.hibernate.dialect.SQLServer2012Dialect
spring.jpa.properties.hibernate.physical_naming_strategy=com.fn.sap.CustomPhysicalNamingSQL

# HikariCP settings
# spring.datasource.hikari.*
spring.datasource.hikari.connection-timeout = 2000 #maximum number of milliseconds that a client will wait for a connection
spring.datasource.hikari.minimum-idle= 10 #minimum number of idle connections maintained by HikariCP in a connection pool
spring.datasource.hikari.maximum-pool-size= 10 #maximum pool size
spring.datasource.hikari.idle-timeout=1000 #maximum idle time for connection
spring.datasource.hikari.max-lifetime= 1000 # maximum lifetime in milliseconds of a connection in the pool after it is closed.
spring.datasource.hikari.auto-commit =true #default auto-commit behavior.

spring.jpa.database-platform=org.hibernate.dialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.jpa.hibernate.ddl-auto=none

spring.jpa.show-sql=false
#spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.SQL=debug
#logging.level.org.hibernate.type.descriptor.sql=trace
spring.jackson.serialization.fail-on-empty-beans=false
# log log request
logging.level.org.springframework.web.client.RestTemplate=INFO
server.port=8449
#server.ssl.key-store=classpath:qms.p12
#server.ssl.key-store-password=1234567a@
#server.ssl.key-store-type=pkcs12
#server.ssl.key-alias=qms
#server.ssl.key-password=1234567a@

# application-dev.properties
appName.allowedApi=http://localhost:4200,http://localhost:8449

spring.servlet.multipart.max-file-size=1MB
spring.servlet.multipart.max-request-size=5MB
upload.image=C:\\upload-dir

# App Properties
bezkoder.app.jwtSecret= qmsSecretKey
bezkoder.app.jwtExpirationMs= 86400000

#api planning
planning.url.service=http://192.168.68.91:8080
#planning.url.service=http://10.212.134.107:8080
profile.url.service=http://192.168.68.91:8080
scada.url.service=http://192.168.68.95:8080
scada.url.service.config=http://192.168.68.95:8888



#port on which the application would run
keycloak.realm = jhipster
keycloak.auth-server-url = http://192.168.18.99:8080/auth
#keycloak.auth-server-url = http://localhost:8080/auth
keycloak.ssl-required = external
#keycloak resource is the client ID
keycloak.resource = web_app
#keycloak.resource = qms
keycloak.use-resource-role-mappings = true
#The line below will prevent redirect to login page
keycloak.bearer-only= true
keycloak.cors= true
keycloak.public-client= true

sso.url=http://192.168.68.90:8080/auth
sso.realm=QLSX
sso.user=qms_planning
sso.pass=123321
sso.clientid=planning_backend
sso.secret=AMmEOEbqtPIskkErXNx94vt8c0bvF7Jd

schedule.sync.scada.sync.error=0 0 */12 ? * *
schedule.sync.scada.sync.line=0 0 */12 ? * *
schedule.sync.scada.sync.stepprocess=0 0 */12 ? * *
schedule.sync.scada.sync.machine=0 0 */12 ? * *

# process
thread.push.warning=1

spring.kafka.bootstrap-servers= 192.168.68.76:9092,192.168.68.76:9093
spring.kafka.consumer.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.auto.offset.reset=earliest
spring.kafka.producer.key.serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value.serializer=org.apache.kafka.common.serialization.StringSerializer


sap.service.host=http://192.168.68.3:8082
